---
- name: 'fail if aws access key id is not set'
  fail:
    msg: "The AWS access key ID must be provided"
  when: aws_access_key_id is not defined or aws_access_key_id == ""

- name: 'fail if aws secret access key is not set'
  fail:
    msg: "The AWS secret access key must be provided"
  when: aws_secret_access_key is not defined or aws_secret_access_key == ""

- name: 'fail if ansible password is not set'
  fail:
    msg: "The Ansible vault password must be provided"
  when: ansible_vault_password is not defined or ansible_vault_password == ""

- name: 'set the aws access key id in ansible user ~/.bashrc'
  lineinfile:
    path: "/home/ansible/.bashrc"
    state: present
    line: "export AWS_ACCESS_KEY_ID={{ aws_access_key_id }}"

- name: 'set the aws secret access key in ansible user ~/.bashrc'
  lineinfile:
    path: /home/ansible/.bashrc
    state: present
    line: "export AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key }}"

- name: 'set the ansible windows user password in ansible user ~/.bashrc'
  lineinfile:
    path: /home/ansible/.bashrc
    state: present
    line: "export {{ windows_ansible_user_password_variable }}={{ secret_ansible_account_password }}"

- name: 'set the aws default region in ansible user ~/.bashrc'
  lineinfile:
    path: /home/ansible/.bashrc
    state: present
    line: export AWS_DEFAULT_REGION=eu-west-2

- name: 'create .ansible directory'
  file:
    path: /home/ansible/.ansible
    state: directory
    mode: 0700
    owner: ansible
    group: ansible

- name: 'set the ansible vault password'
  copy:
    content: "{{ ansible_vault_password }}"
    dest: "/home/ansible/.ansible/vault-pass"
    mode: 0600
    owner: ansible
    group: ansible

- name: 'install utils'
  package:
    name: ['git', 'nc', 'vim']

- name: 'install jq'
  get_url:
    url: "{{ jq_url }}"
    dest: "{{ jq_install_path }}"
    mode: 0755

- name: 'install python (Ubuntu)'
  package:
    name: python
  when: ansible_distribution == 'Ubuntu'

- name: 'install system virtualenv'
  pip:
    name: virtualenv

- name: 'create /etc/ansible directory'
  file:
    path: "/etc/ansible"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: 'copy ec2.ini for dynamic inventory'
  template:
    src: ec2.ini
    dest: /etc/ansible/ec2.ini
    owner: root
    group: root

- name: 'clone safe-build-infrastructure repo'
  git:
    repo: "{{ safe_build_infrastructure_repo_url }}"
    dest: "{{ safe_build_infrastructure_repo_path }}"
    version: "{{ safe_build_infrastructure_repo_branch }}"
  become: yes
  become_user: "{{ provisioning_user }}"

- name: 'create virtualenv in repo location'
  command: "virtualenv {{ virtualenv_name }}"
  args:
    chdir: "{{ safe_build_infrastructure_repo_path }}"
  become: yes
  become_user: "{{ provisioning_user }}"

# You are supposed to be able to use the 'virtualenv' parameter of the pip module to
# install packages into a virtualenv, but it wasn't working correctly.
- name: 'install ansible, boto and pypsrp in virtualenv'
  shell: |
    source {{ virtualenv_path }}/bin/activate
    pip install {{ item }}
  with_items:
    - awscli
    - git+https://github.com/ansible/ansible.git@devel
    - boto
    - boto3
    - pypsrp
  become: yes
  become_user: "{{ provisioning_user }}"
